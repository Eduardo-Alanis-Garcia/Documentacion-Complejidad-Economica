import rasterio
import rasterio
from rasterio.enums import Resampling
with rasterio.open('Datos/Procesados/Antiguos/Raster/Agencias de cobranza y comunicaciones.tiff') as src:
data = src.read(
out_shape=(src.count, src.height, src.width),
resampling=Resampling.nearest
)
transform = src.transform
import os
reticulate::repl_python()
reticulate::repl_python()
py_install("rasterio")
library(reticulate)
py_install("rasterio")
reticulate::repl_python()
reticulate::py_install("jupyter")
reticulate::repl_python()
reticulate::repl_python()
mun = sf::read_sf("../../Importantes_documentos_usar/Municipios/municipiosjair.shp")
plot(mun$geometry)
directorio = "Datos/Originales/Hidalgo/"
archivos_csv = list.files(path = directorio,
pattern = "\\.csv",
all.files = T,
recursive = T,
full.names = T)
archivos_csv = archivos_csv[!grepl("diccionario", archivos_csv)]
nombres = archivos_csv |>  dirname() |>  dirname() |>  basename()
cat("El archivo csv ha abrir es: ", archivos_csv, "\n")
cat("El archivo csv tiene el nombre: ", nombres, "\n")
i = 1
denue = read.csv(archivos_csv[i]) |>
dplyr::filter(cve_ent == 13) |>
dplyr::filter(latitud != 0, longitud != 0) |>
dplyr::select(codigo_act,nombre_act,per_ocu,cve_mun,cve_loc,latitud,longitud) |>
dplyr::mutate(rama = substr(x = codigo_act, start = 1, stop = 4)) |>
dplyr::mutate(per_ocu = dplyr::case_when(
per_ocu == "0 a 5 personas" ~ "2.5",
per_ocu == "6 a 10 personas" ~ "8",
per_ocu == "11 a 30 personas" ~ "20.5",
per_ocu == "31 a 50 personas" ~ "40.5",
per_ocu == "51 a 100 personas" ~ "75.5",
per_ocu == "101 a 250 personas" ~ "175.5",
per_ocu %in% c("251 y más personas", "251 y m\xe1s personas") ~ "251",
TRUE ~ per_ocu
),
per_ocu = as.numeric(per_ocu)
)
classificador_hoja = readxl::read_excel("Datos/Clasificacion ramas de DENUE.xlsx")
classificador_hoja = classificador_hoja |>
dplyr::rename(grupo = `Grupo propuesto`) |>
dplyr::mutate(grupo = gsub(pattern = "[0-9]+", replacement = "", x = grupo),
grupo = stringr::str_squish(grupo))
denue_prueba_shp = merge(x = denue, y = classificador_hoja, by.x = 'rama', by.y = 'Rama', all.x = T )
shapefile  = sf::st_as_sf(denue_prueba_shp, coords = c("longitud", "latitud"), crs = 4326)
plot(shapefile$geometry, add = T, color = T)
plot(shapefile$geometry, add = T, color = "red")
base = raster::raster("Datos/Procesados/Antiguos/Raster/pendiente.tif")*0
bbox = sf::st_bbox(base)
window = spatstat.geom::owin(xrange = c(bbox[1], bbox[3]), yrange = c(bbox[2], bbox[4]))
grupos = unique(denue_prueba_shp$grupo)
### Creacion de carpeta
destino_guardado = file.path("Datos/Procesados/Actualizados", nombres[i])
destino_guardado
grupos
grupo_I = grupos[1]
shapefile_grupo = shapefile |> dplyr::filter(grupo == grupo_I)
View(shapefile_grupo)
coords = sf::st_coordinates(shapefile_grupo|> sf::st_transform(crs(base)))    # Extraer las coordenadas de los puntos
coords = sf::st_coordinates(shapefile_grupo|> sf::st_transform(raster::crs(base)))    # Extraer las coordenadas de los puntos
puntos_ppp = spatstat.geom::ppp(x = coords[inside.owin(x = coords[, 1], y = coords[, 2], window), 1], y = coords[inside.owin(x = coords[, 1], y = coords[, 2], window), 2], window = window)   ## Convertir los puntos a un objeto ppp
shapefile_grupo = shapefile |> dplyr::filter(grupo == grupo_I)
coords = sf::st_coordinates(shapefile_grupo|> sf::st_transform(raster::crs(base)))    # Extraer las coordenadas de los puntos
View(coords)
puntos_ppp = spatstat.geom::ppp(x = coords[spatstat.geom::inside.owin(x = coords[, 1], y = coords[, 2], window), 1],
y = coords[spatstat.geom::inside.owin(x = coords[, 1], y = coords[, 2], window), 2], window = window)   ## Convertir los puntos a un objeto ppp
pesos = shapefile_grupo$per_ocu_media[inside.owin(x = coords[, 1], y = coords[, 2], window)]
pesos = shapefile_grupo$per_ocu_media[spatstat.geom::inside.owin(x = coords[, 1], y = coords[, 2], window)]
dens = spatstat.explore::density.ppp(puntos_ppp,sigma=c(2000,2000),dimyx=c(998,978),weights =1e6*100*unlist(pesos, use.names = F)/sum(unlist(pesos, use.names = F))) |> raster()
dens = spatstat.explore::density.ppp(puntos_ppp,sigma=c(2000,2000),dimyx=c(998,978),weights =1e6*100*unlist(pesos, use.names = F)/sum(unlist(pesos, use.names = F))) |> raster::raster()
raster::crs(dens) = raster::crs(base)
raster::crs(dens) = raster::crs(base)
raster::extent(dens) = raster::extent(base)
dens = dens*(base+1)
plot(dens)
spatstat.geom::inside.owin(x = coords[, 1], y = coords[, 2], window)
plot(dens)
View(dens)
class(dens)
plot(base)
base = raster::raster("Datos/Procesados/Antiguos/Raster/pendiente.tif")*0
plot(base)
dens
base = raster::raster("Datos/Procesados/Antiguos/Raster/pendiente.tif")
plot(base)
raster::plot(base)
raster::plot(dens)
a = raster::raster("Datos/Procesados/Actualizados/2025A/Agencias de cobranza y comunicaciones.tiff")
raster::plot(a)
antes = raster::raster("Datos/Procesados/Antiguos/Raster/Agencias de cobranza y comunicaciones.tiff")
despues = raster::raster("Datos/Procesados/Actualizados/2025A/Agencias de cobranza y comunicaciones.tiff")
antes
despues
View(antes)
antes@file
directorio = "Datos/Originales/Hidalgo/"
archivos_csv = list.files(path = directorio,
pattern = "\\.csv",
all.files = T,
recursive = T,
full.names = T)
archivos_csv = archivos_csv[!grepl("diccionario", archivos_csv)]
nombres = archivos_csv |>  dirname() |>  dirname() |>  basename()
cat("El archivo csv ha abrir es: ", archivos_csv, "\n")
cat("El archivo csv tiene el nombre: ", nombres, "\n")
i = 1
denue = read.csv(archivos_csv[i]) |>
dplyr::filter(cve_ent == 13) |>
dplyr::filter(latitud != 0, longitud != 0) |>
dplyr::select(codigo_act,nombre_act,per_ocu,cve_mun,cve_loc,latitud,longitud) |>
dplyr::mutate(rama = substr(x = codigo_act, start = 1, stop = 4)) |>
dplyr::mutate(per_ocu = dplyr::case_when(
per_ocu == "0 a 5 personas" ~ "2.5",
per_ocu == "6 a 10 personas" ~ "8",
per_ocu == "11 a 30 personas" ~ "20.5",
per_ocu == "31 a 50 personas" ~ "40.5",
per_ocu == "51 a 100 personas" ~ "75.5",
per_ocu == "101 a 250 personas" ~ "175.5",
per_ocu %in% c("251 y más personas", "251 y m\xe1s personas") ~ "251",
TRUE ~ per_ocu
),
per_ocu = as.numeric(per_ocu)
)
classificador_hoja = readxl::read_excel("Datos/Clasificacion ramas de DENUE.xlsx")
classificador_hoja = classificador_hoja |>
dplyr::rename(grupo = `Grupo propuesto`) |>
dplyr::mutate(grupo = gsub(pattern = "[0-9]+", replacement = "", x = grupo),
grupo = stringr::str_squish(grupo))
denue_prueba_shp = merge(x = denue, y = classificador_hoja, by.x = 'rama', by.y = 'Rama', all.x = T )
shapefile  = sf::st_as_sf(denue_prueba_shp, coords = c("longitud", "latitud"), crs = 4326)
base = raster::raster("Datos/Procesados/Antiguos/Raster/pendiente.tif")*0
bbox = sf::st_bbox(base)
window = spatstat.geom::owin(xrange = c(bbox[1], bbox[3]), yrange = c(bbox[2], bbox[4]))
grupos = unique(denue_prueba_shp$grupo)
### Creacion de carpeta
destino_guardado = file.path("Datos/Procesados/Actualizados", nombres[i])
if (!dir.exists(destino_guardado)) {
dir.create(destino_guardado, recursive = TRUE)
}
View(shapefile)
plot(despues)
plot(antes)
crs(antes)
crs(antes) = crs(despues)
antes = raster::raster("Datos/Procesados/Antiguos/Raster/Agencias de cobranza y comunicaciones.tiff")
despues = raster::raster("Datos/Procesados/Actualizados/2025A/Agencias de cobranza y comunicaciones.tiff")
crs(antes) == crs(despues)
raster::crs(antes) == raster::crs(despues)
raster::crs(antes)
a = raster::crs(antes)
View(a)
a@projargs
a@projargs
b = raster::crs(despues)
View(b)
b@projargs
b
antes
despues
antes = raster::raster("Datos/Procesados/Actualizados/2025A/Turismo.tiff")
despues = raster::raster("Datos/Procesados/Antiguos/Raster/Agencias de cobranza y comunicaciones.tiff")
antes = raster::raster("Datos/Procesados/Actualizados/2025A/Agencias de cobranza y comunicaciones.tiff")
despues = raster::raster("Datos/Procesados/Antiguos/Raster/Agencias de cobranza y comunicaciones.tiff")
antes
hist(antes)
raster::values(antes)
raster::values(despues)
raster::values(antes)
hist(x = raster::values(antes))
hist(x = raster::values(despues))
